---
title: "Package Concepts"
author: "Sebastian Ueckert"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Vignette Title}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

The `assemblerr` package allows to quickly describe complex pharmacometric models using a set of elementary building blocks and then to generate NONMEM code for these models. In `assemblerr`, each of these two steps use a different representation of the model. The model object in step 1 is only concerned with the pharmacometric substance of the model and the model in step two is mainly concerned with the 

is implem  distinguishes between two types of models **decl**, a model consists of a set of **facets**  

__Model__: A parameterized representation of a data generating process  

__Facet:__ An aspect of a model that can be changed

__Fragment__: One or more facets together with their properties

 - Use R syntax but software-specific semantics

# Conversion diagram

```{r, echo=FALSE, fig.height=5, fig.width=7}
DiagrammeR::mermaid("
graph TD
subgraph domain specific
A[pk_model]
B[pbpk_model]
C[pd_model] 
end
A --> D[model]
B --> D
C --> D
subgraph software specifc
E[model_nm]
F[model_mlx]
G[model_poped]
end
D --> E
D --> F
D --> G
")
```



__Declaration__: The mathematical definition of a variable as a function of other variables

__Statement__: The expression of an action to be carried out
